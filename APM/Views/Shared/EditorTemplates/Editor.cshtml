@using APM.Models;

@model string

@{
    string FieldName = ((string)ViewData["FieldName"]);
    string FieldValue = (string)ViewData["FieldValue"];
    bool IsReadonly = ((bool)ViewData["IsReadonly"]);
    bool IsRequired = ((bool)ViewData["IsRequired"]);
    Dictionary<string, object> Attrs = new Dictionary<string, object>();
    Attrs.Add("class", "IElement IEditor w-100");

    if (!IsReadonly && IsRequired)
    {
        Attrs.Add("data-required-msg", "الزامی است");
        Attrs.Add("required", "required");
    }
}

@(Html.Kendo().EditorFor(model => model)
    .HtmlAttributes(Attrs)
    .StyleSheets(StyleSheets => {
        StyleSheets.Add("/Fonts/Base.css");
        StyleSheets.Add("/Fonts/BFonts.css");
    })
    .Tools(tools => tools
        .Clear()
        .Bold().Italic().Underline().Strikethrough()
        .JustifyRight().JustifyCenter().JustifyLeft().JustifyFull()
        .InsertUnorderedList().InsertOrderedList()
        .Indent().Outdent()
        .CreateLink().Unlink()
        .InsertImage()
        .InsertFile()
        .SubScript()
        .SuperScript()
        .TableEditing()
        .ViewHtml()
        .Formatting()
        .CleanFormatting()
        .FormatPainter()
        .FontName(FontName => {
            foreach(string Item in Referral.FontList)
            {
                FontName.Add(Item, Item.ToLower());
            }
        })
        .FontSize()
        .FontColor().BackColor()
        .Print()
    )
    .Value(@<text>
            <p>
               <img src="http://www.kendoui.com/Image/kendo-logo.png" alt="Editor for ASP.NET MVC logo" style="display:block;margin-left:auto;margin-right:auto;" />
            </p>
            <p>
                Kendo UI Editor allows your users to edit HTML in a familiar, user-friendly way.<br />
                In this version, the Editor provides the core HTML editing engine, which includes basic text formatting, hyperlinks, lists,
                and image handling. The widget <strong>outputs identical HTML</strong> across all major browsers, follows
                accessibility standards and provides API for content manipulation.
            </p>
            <p>Features include:</p>
            <ul>
                <li>Text formatting & alignment</li>
                <li>Bulleted and numbered lists</li>
                <li>Hyperlink and image dialogs</li>
                <li>Cross-browser support</li>
                <li>Identical HTML output across browsers</li>
                <li>Gracefully degrades to a <code>textarea</code> when JavaScript is turned off</li>
            </ul>
            <p>
                Read <a href="http://www.kendoui.com/documentation/introduction.aspx">more details</a> or send us your
                <a href="http://www.kendoui.com/forums.aspx">feedback</a>!
            </p>
      </text>)
    .Placeholder((string)ViewData["Title"])
)

@if (IsReadonly)
{
    <script type="text/javascript">
    $(document).ready(function () {
        var editor = $("@("#" + FieldName)").data("kendoEditor"),
            editorBody = $(editor.body);

        editorBody.removeAttr("contenteditable").find("a").on("click.readonly", false);
    });
    </script>
}
